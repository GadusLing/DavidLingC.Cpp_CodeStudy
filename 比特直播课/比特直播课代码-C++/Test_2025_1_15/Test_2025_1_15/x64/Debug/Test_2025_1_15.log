  test.cpp
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244: “初始化”: 从“_Ty”转换到“_Ty”，可能丢失数据
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         with
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         [
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:             _Ty=double
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         ]
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         and
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         [
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:             _Ty=int
D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82): warning C4244:         ]
  (编译源文件“test.cpp”)
      D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\xmemory(700,82):
      模板实例化上下文(最早的实例化上下文)为
          D:\DavidLingC_CodeStudy\比特直播课\比特直播课代码-C++\Test_2025_1_15\Test_2025_1_15\test.cpp(77,6):
          查看对正在编译的函数 模板 实例化“void std::list<int,std::allocator<int>>::emplace_back<double>(double &&)”的引用
          D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\list(996,29):
          查看对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::list<_Ty,_Alloc>::_Emplace<double>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *const ,double &&)”的引用
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>
          ]
          D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\list(1021,44):
          查看对正在编译的函数 模板 实例化“std::_List_node_emplace_op2<std::allocator<std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_List_node_emplace_op2<double>(_Alnode &,double &&)”的引用
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>,
              _Alnode=std::allocator<std::_List_node<int,std::_Default_allocator_traits<std::allocator<int>>::void_pointer>>
          ]
          D:\VisualStdio2022\VC\Tools\MSVC\14.42.34433\include\list(585,25):
          查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,double>(_Alloc &,_Objty *const ,double &&)”的引用
          with
          [
              _Alloc=std::allocator<std::_List_node<int,std::_Default_allocator_traits<std::allocator<int>>::void_pointer>>,
              _Ty=int,
              _Objty=int
          ]
  
  Test_2025_1_15.vcxproj -> D:\DavidLingC_CodeStudy\比特直播课\比特直播课代码-C++\Test_2025_1_15\x64\Debug\Test_2025_1_15.exe
